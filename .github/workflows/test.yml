name: Test

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.3.0
        with:
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: '>= 16.9.1'
          # Set this option if you want the action to check for the latest available version that satisfies the version spec
          check-latest: false
      - run: npm install -g @quasar/cli
      - run: npm install
      - run: quasar build
      - run: pwd && ls -al *
      - uses: actions/upload-artifact@v2
        with:
          name: build-artifacts-quasar
          path: dist/spa/
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5
      # DOCKER RELATED
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            BRANCH_OR_TAG=${{ steps.branch-name.outputs.current_branch }}
            HOSTER=github.com
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: false

  electron:
    needs: build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      # GET LATEST CODE
      - name: Checkout latest code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: We are running on
        run: echo matrix.os is ${{ matrix.os }}
        # Either:
        #  1. macos-latest
        #  2. ubuntu-latest
        #  3. windows-latest

      # SETUP NODE ENVIRONMENT
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.3.0
        with:
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: '>= 16.9.1'
          # Set this option if you want the action to check for the latest available version that satisfies the version spec
          check-latest: false

      - name: Build/release Electron app
        uses: vedaprakashms/quasar_electron_build@V0.0.1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

      - name: List files
        run: ls dist/electron

      - uses: actions/upload-artifact@v2
        with:
          name: build-artifacts-electron ${{ matrix.os }}
          path: |
            dist/electron/
            !dist/electron/UnPackaged
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

      - name: Rename folders
        run: |
          mv dist/electron/Let* lttmm-${{ matrix.os }}

      # Electron Archives
      - name: Create zip
        uses: ihiroky/archive-action@v1
        with:
          root_dir: lttmm-${{ matrix.os }}
          file_path: lttmm-app-${{ matrix.os }}.zip
          verbose: true
      - name: Create tar.gz
        run: |
          tar -cvzf lttmm-app-${{ matrix.os }}-${{ needs.release.outputs.newtag }}.tar.gz lttmm-${{ matrix.os }}

      - name: List files
        run: ls
